[language-server.arduino-lsp]
command = "arduino-language-server" 
args = ["-cli", "arduino-cli", "-cli-config", "~/.arduino15/arduino-cli.yaml", "-clangd", "clangd"]

[[grammar]]
name = "cpp"
source = { git = "https://github.com/tree-sitter/tree-sitter-cpp", rev = "a90f170f92d5d70e7c2d4183c146e61ba5f3a457" }

[[grammar]]
name = "arduino"
source = { git = "https://github.com/ObserverOfTime/tree-sitter-arduino", rev = "db929fc6822b9b9e1211678d508f187894ce0345"}

[[language]]
name = "arduino"
grammar = "c"
scope = "source.arduino"
injection-regex = "arduino"
file-types = ["ino"]
roots = [ "sketch.yaml"]
language-servers = [ "arduino-lsp" ]

[language-server.pyright]
command = "pyright-langserver"
args = ["--stdio"]

[language-server.pyright.config]
python.analysis.venvPath = "."
python.analysis.venv = ".venv"
python.analysis.lint = true
python.analysis.inlayHint.enable = true
python.analysis.autoSearchPaths = true
python.analysis.diagnosticMode = "workspace"
python.analysis.useLibraryCodeForType = true
python.analysis.logLevel = "Error"
python.analysis.typeCheckingMode = "off"
python.analysis.autoImoprtCompletion = true
python.analysis.reportOptionalSubscript = false
python.analysis.reportOptionalMemberAccess = false


[language-server.ruff]
command = "ruff"
args = ["server", "-q", "--preview"] 


[[language]]
name = "python"
scope = "source.python"
injection-regex = "python"
file-types = ["py", "pyi", "py3", "pyw", "ptl", "rpy", "cpy", "ipy", "pyt", { glob = ".python_history" }, { glob = ".pythonstartup" }, { glob = ".pythonrc" }, { glob = "SConstruct" }, { glob = "SConscript" }]
shebangs = ["python"]
roots = ["pyproject.toml", "setup.py", "poetry.lock", "pyrightconfig.json", "requirements.txt", ".venv/"]
comment-token = "#"
language-servers = [ {name = "pyright", except-features=["diagnostics"]}, "ruff" ]
indent = { tab-width = 4, unit = "    " }
auto-format = true
formatter =  { command = "bash", args = ["-c", "ruff format --line-length 80 -q . && black --line-length 80 -q -"] }
